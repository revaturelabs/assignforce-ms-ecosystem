1. In pom.xml:
	* remove oracle JDBC dependency
	* add postgresql dependency:
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

2. application.yml:
	Do following:
	
	spring:
		datasource:
			url: jdbc:postgresql://baasu.db.elephantsql.com:5432/{usermane}
    			username: {elephant sql username}
    			password: {elephant sql password}
    			driverClassName: org.postgresql.Driver
    			tomcat:
          			max-active: 3
		
		jpa:
			database-platform: org.hibernate.dialect.PostgreSQLDialect



P.S.
* Elephant SQL queries are case sensitive, lower case by default when column name, table name are not quoted, but case will be recognized when quoted.
* max-active can have maximum 5 due to that fact that our elephant sql plan (free) allows only 5 concurrent connection to the database. When this is not set, the default value will be 100, which means tomcat will try to establish 100 active connection to DB, this will cause failure due to our plan limit. 5 will be the maximum config in our case, however, consider that we might happen to test or observe DB through elephant sql site or through pgAdmin app, 2 connections are reserved for that purpose.
* the url, username, password are easily to locate from elephant sql, but the original url contains user login info that should be taken out when configuring, details see the template above. (observe that original url contains postgres:// whereas here we need postgresql://).